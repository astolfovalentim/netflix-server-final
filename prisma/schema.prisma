// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  name     String
  email    String    @unique
  password String
  CPF      String    @unique
  isAdmin  Boolean   @default(false)
  profiles Profile[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id            String         @id @default(uuid())
  title         String         @unique
  imageURL      String
  user          User           @relation(fields: [userId], references: [id])
  userId        String         @map("user_id")
  profileMovies ProfileMovie[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Movie {
  id                  String         @id @default(uuid())
  title               String         @unique
  coverImageURL       String
  description         String
  year                Int
  imdbScore           Float?
  trailerYouTubeUrl   String
  moviereviewYouTubeUrl String
  genres              Genre[]        @relation("genre-movies")
  profileMovies       ProfileMovie[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Genre {
  id     String  @id @default(uuid())
  name   String  @unique
  movies Movie[] @relation("genre-movies")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProfileMovie {
  id String @id @default(uuid())

  profile   Profile @relation(fields: [profileId], references: [id])
  profileId String  @map("profile_id")

  movie   Movie  @relation(fields: [movieId], references: [id])
  movieId String @map("movie_id")

  favorite  Boolean @default(false)
  imdbScore Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([profileId, movieId])
  @@map("profile_to_movie")
}
